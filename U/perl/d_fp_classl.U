?RCS: $Id$
?RCS:
?RCS: Copyright (c) 2000 Jarkko Hietaniemi
?RCS:
?RCS: You may distribute under the terms of either the GNU General Public
?RCS: License or the Artistic License, as specified in the README file.
?RCS:
?MAKE:d_fp_classl: Inlibc
?MAKE:	-pick add $@ %<
?S:d_fp_classl:
?S:	This variable conditionally defines the HAS_FP_CLASSL symbol, which
?S:	indicates to the C program that the fp_classl() routine is available.
?S:.
?C:HAS_FP_CLASSL:
?C:	This symbol, if defined, indicates that the fp_classl routine is
?C:	available to classify long doubles.  Available for example in
?C:	Digital UNIX.
?C:	The returned values are defined in <math.h> and are:
?C:
?C:	FP_SNAN           Signaling NaN (Not-a-Number)
?C:	FP_QNAN           Quiet NaN (Not-a-Number)
?C:	FP_POS_INF        +infinity
?C:	FP_NEG_INF        -infinity
?C:	FP_POS_NORM       Positive normalized
?C:	FP_NEG_NORM       Negative normalized
?C:	FP_POS_DENORM     Positive denormalized
?C:	FP_NEG_DENORM     Negative denormalized
?C:	FP_POS_ZERO       +0.0 (positive zero)
?C:	FP_NEG_ZERO       -0.0 (negative zero)
?C:.
?H:#$d_fp_classl HAS_FP_CLASSL		/**/
?H:.
?LINT:set d_fp_classl
: see if fp_classl exists
set fp_classl d_fp_classl
eval $inlibc

